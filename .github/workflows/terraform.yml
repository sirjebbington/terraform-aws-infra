name: Terraform CI/CD

on:
  pull_request:
    paths:
      - 'environment/**.tf'
      - 'modules/**.tf'

  push:
    branches:
      - main
    paths:
      - 'environment/staging/**'
    tags:
      - 'v*.*.*'

jobs:
  terraform-check:
    name: Terraform Format, Validate, Plan (PRs)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Init Terraform (staging, no backend)
        run: |
          cd environment/staging
          terraform init -backend=false

      - name: Format Check
        run: |
          cd environment/staging
          terraform fmt -check

      - name: Validate
        run: |
          cd environment/staging
          terraform validate

      - name: Plan
        run: |
          cd environment/staging
          terraform plan -input=false -var-file="terraform.tfvars"

  deploy-staging:
    name: Apply to Staging (main branch)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Init with Backend (staging)
        run: |
          cd environment/staging
          terraform init

      - name: Apply Staging
        run: |
          cd environment/staging
          terraform apply -auto-approve -input=false -var-file="terraform.tfvars"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}

  deploy-production:
    name: Apply to Production (on tag)
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Init with Backend (production)
        run: |
          cd environment/production
          terraform init

      - name: Apply Production
        run: |
          cd environment/production
          terraform apply -auto-approve -input=false -var-file="terraform.tfvars"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
